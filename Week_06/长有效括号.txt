public int LongestValidParentheses(string s) {
 if (string.IsNullOrEmpty(s))
        {
            return 0;
        }
        int left = 0;
        int right = 0;
        int maxLength = 0;

        for (int i = 0; i < s.Length; i++)
        {
            if (s[i] == '(')
            {
                left++;
            }
            else
            {
                right++;
            }

            if (left == right)
            {
                maxLength = Math.Max(maxLength, right * 2);
            }
            else if (right >= left)
            {
                left = 0;
                right = 0;
            }
        }

       

        left = 0;
        right = 0;
        for (int i = s.Length - 1; i >= 0; i--)
        {
            if (s[i] == '(')
            {
                left++;
            }
            else
            {
                right++;
            }

            if (left == right)
            {
                maxLength = Math.Max(maxLength, left * 2);
            }
            else if (left >= right)
            {
                left = 0;
                right = 0;
            }
        }      

        return maxLength;
    }